import UIKit
import IBPCollectionViewCompositionalLayout

typealias NSCollectionLayoutAnchor = IBPNSCollectionLayoutAnchor
typealias NSCollectionLayoutBoundarySupplementaryItem = IBPNSCollectionLayoutBoundarySupplementaryItem
typealias NSCollectionLayoutDecorationItem = IBPNSCollectionLayoutDecorationItem
typealias NSCollectionLayoutDimension = IBPNSCollectionLayoutDimension
typealias NSCollectionLayoutEdgeSpacing = IBPNSCollectionLayoutEdgeSpacing
typealias NSCollectionLayoutEnvironment = IBPNSCollectionLayoutEnvironment
typealias NSCollectionLayoutGroup = IBPNSCollectionLayoutGroup
typealias NSCollectionLayoutItem = IBPNSCollectionLayoutItem
typealias NSCollectionLayoutSection = IBPNSCollectionLayoutSection
typealias NSCollectionLayoutSize = IBPNSCollectionLayoutSize
typealias NSCollectionLayoutSpacing = IBPNSCollectionLayoutSpacing
typealias NSCollectionLayoutSupplementaryItem = IBPNSCollectionLayoutSupplementaryItem
typealias NSCollectionLayoutVisibleItem = IBPNSCollectionLayoutVisibleItem
typealias UICollectionLayoutSectionOrthogonalScrollingBehavior = IBPUICollectionLayoutSectionOrthogonalScrollingBehavior
typealias UICollectionViewCompositionalLayout = IBPUICollectionViewCompositionalLayout
typealias UICollectionViewCompositionalLayoutConfiguration = IBPUICollectionViewCompositionalLayoutConfiguration

@UIApplicationMain
class AppDelegate: UIResponder, UIApplicationDelegate {
    var window: UIWindow?

    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {
        return true
    }
}
